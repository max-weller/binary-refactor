#set($pageTitle="$clzName - Source view")
#parse("/pageheader.vm")

  <body>
    #parse("/menu.vm")
  <div id="popupDiv" style="display:none"></div>


	    <div class="container">
        <!-- Main hero unit for a primary marketing message or call to action -->
        <div class="hero-unit" style="padding:10px  60px;margin:0;">
        <input type=button id=storeChanges class="btn btn-default" value="Save changes" style="float:right">
          <h3 class="classfile">#set($pathItems = $clzName.split("/"))
      #foreach($item in $pathItems)
      <span class="itm">$item</span>
      #end</h3>
          
            <footer class="blockquote-footer"> in $jarFile.origName</footer>
    
<label for="hierarchyColors" class=checkbox style="float:right"><input type="checkbox" id="hierarchyColors"> hierarchyColors</label>          
<p>
              <a href="/jarviewer/view.htm?id=$id&clz=${clzName}">Edit</a> |
              <b>CFR-Source</b> |
              <a href="/jarviewer/source.htm?id=$id&clz=${clzName}">Bytecode</a> |
              <a href="/jarviewer/source.htm?id=$id&clz=${clzName}&type=decomp">jclazz-Source</a> |
              <a href="/jarviewer/graph.htm?id=$id&clz=${clzName}&type=mydeps">Dependencies</a> |
              <a href="/jarviewer/graph.htm?id=$id&clz=${clzName}&type=depsonme">DependsOnMe</a>
</p>
        </div>
			<pre id="code">$code</pre>
            <div id="filetreeOuterDiv">
                <input type="search" id="treeFilter" value="" placeholder="filter by package name...">
                <div id="filetreeContainer" ></div>
            </div>

             <script>
             var jarId="$id";
             var thisClassName="$clzName";

             try {
               window.bcastChannel = new BroadcastChannel(jarId);
               bcastChannel.onmessage=function(e) {
                 if (e.data.renameClass)
                   $('.typeRef[data-classfile="'+e.data.renameClass+'"]').text(e.data.to).addClass("changed");
                 if (e.data.renameId)
                   $('.identifierRef[data-classfile="'+e.data.classFile+'"][data-identifier="'+e.data.renameId+'"][data-signature="'+e.data.sig+'"]').text(e.data.to).addClass("changed");
               }
             }catch(e){console.warn("no support for broadcast channel?",e)}

              function setDirty() {
             	  $("#storeChanges").attr("class", "btn btn-success");
             	  window.onbeforeunload=function(){return "Unsaved changes";}
              }

             var renameConfig={};
             function ClassRenameInfo(className) {
                 this.oldName=className;
                 this.newName=className;
                 this.members={};
             }
             ClassRenameInfo.prototype.put=function(type,oldName,sig,newName){
                 this.members[type+": "+oldName+" "+sig]=newName;
             }
             ClassRenameInfo.prototype.toString=function(){
                 var out="class: "+this.oldName+" to "+this.newName+"\n";
                 for(var key in this.members) {
                     if(!this.members.hasOwnProperty(key))continue;
                     out += key + " to " + this.members[key] + "\n";
                 }
                 return out;
             }
             function putClass(name, newName) {
                 if (!renameConfig[name]) renameConfig[name]=new ClassRenameInfo(name);
                 if(newName) renameConfig[name].newName=newName;
             }
             function putMember(className,type,oldName,sig,newName ) {
                 putClass(className);
                 renameConfig[className].put(type,oldName,sig,newName);
             }

             $("#hierarchyColors").change(function() {
                 $("#code").toggleClass("hierarchyColors",this.value)
             });
             $(".typeRef").contextmenu(function() {
                 var classFile = this.getAttribute("data-classfile");
                 var idRefNew = this.getAttribute("data-classfile-new");
                 if(!idRefNew) idRefNew=classFile;
                 var res=prompt("Rename type "+classFile, idRefNew);
                 if (res) {
                     putClass(classFile, res);
                     this.setAttribute("data-classfile-new", res);
                     $('.typeRef[data-classfile="'+classFile+'"]').text(res).addClass("changed");
                     if (bcastChannel) bcastChannel.postMessage({renameClass:classFile, to:res});
                     setDirty();
                 }
                 return false;
             });
             $(".identifierRef").contextmenu(function() {
                 var classFile = this.getAttribute("data-classfile");
                 var idType = this.getAttribute("data-identifiertype");
                 var idRef = this.getAttribute("data-identifier");
                 var idSig = this.getAttribute("data-signature");
                 var res=prompt("Rename "+idType+" "+idRef +" of "+classFile+"\nSignature: "+idSig, this.innerText);
                 if(res) {
                    $('.identifierRef[data-classfile="'+classFile+'"][data-identifier="'+idRef+'"][data-signature="'+idSig+'"]').text(res).addClass("changed");
                    if (bcastChannel) bcastChannel.postMessage({classFile:classFile,renameId:idRef,sig:idSig, to:res});
                    putMember(classFile, idType, idRef, idSig, res);
                    setDirty();
                 }
                 return false;
             });
             $(".identifierRef").mouseenter(function(e) {
                 var classFile = this.getAttribute("data-classfile");
                 var idType = this.getAttribute("data-identifiertype");
                 var idRef = this.getAttribute("data-identifier");
                 var idSig = this.getAttribute("data-signature");
                 console.log(e);
                 $.get("/jarviewer/xref.htm?id="+jarId+"&clz="+classFile+"&member="+escape(idRef)+"&sig="+escape(idSig), function(result) {
                 	  console.log(result);
                 	  var popup = $("#popupDiv").html("").show();
                 	  for (var i in result) {
                 	  	  $("<a>").text(result[i]).attr("href", "/jarviewer/cfrsource.htm?id="+jarId+"&clz=" + result[i]).appendTo(popup);
                    }
                    popup.css({top:(e.pageY+10)+"px", left:(e.pageX-25)+"px",});

                 }, "json");
               clearTimeout(hidePopupTimer);
             });
             $("#popupDiv").mouseenter(function(e) {
               clearTimeout(hidePopupTimer);
             })
             $("#popupDiv, .identifierRef").mouseleave(function(e) {
             	  hidePopupTimer=setTimeout(function()Â {
             	  	$("#popupDiv").hide();
                },500)
             })
             $("#storeChanges").click(function() {
                 var out="";
                 for(var className in renameConfig) {
                     if(!renameConfig.hasOwnProperty(className))continue;

                     out+=renameConfig[className].toString()+"\n";
                 }
                 if(!confirm(out))return;
                 starttime = +new Date();
                 $.post("/renamer/batch.htm", {id: jarId, renameConfig: out}, function(ok,a1,xhr) {
                     console.log("batch call result:",ok,a1,xhr)
                     if (xhr.status==200){
                     	  var duration = new Date() - starttime;
                        alert("Done in "+(duration/1000)+" sec");
                        window.onbeforeunload=null
                        if(renameConfig[thisClassName]) location.href="/jarviewer/cfrsource.htm?id="+jarId+"&clz="+renameConfig[thisClassName].newName;
                     }else
                        alert(ok);
                 }, "text");
             })
             </script>
             <style>
                .container {margin-left:10px;margin-right:265px;width:auto;}

                .minilabel{background:#888;color:white;text-shadow:1px 1px 1px #333;border-radius:2px;padding:2px;font-size:80%;}
                .minilabel.red{background:#b33;}
                .minilabel.blue{background:#33b;}
                .hierarchyColors span {background:hsla(0,40%,80%,0.3)}
                .hierarchyColors span span {background:hsla(30,40%,80%,1)}
                .hierarchyColors span span span{background:hsla(60,40%,80%,1)}
                .hierarchyColors span span span span{background:hsla(90,40%,80%,1)}
                .hierarchyColors span span span span span{background:hsla(120,40%,80%,1)}
                


                .hierarchyColors span span:hover {box-shadow:0 0 5px rgba(77,77,77,0.5)}
                .hierarchyColors span span span:hover {box-shadow:0 0 5px rgba(77,77,77,0.9)}
                a.typeRef { color: #22b; _font-weight: bold; }
                a.identifierRef { color: #f0f; font-weight: bold; }
                a.identifierRef.MethodPrototype, a.identifierRef.Field { font-size: 125%; }
                .identifierRef.method { color: #600; }
                .identifierRef.field, .identifierRef.Field, .identifierRef.FieldVariable{ color: #060; }
                a:target { background:#111;color:#ffa!important; }
                a.changed{background:#fea!important;font-style:italic;color:#222!important;}

                #popupDiv{position:absolute; width:450px; min-height:100px; max-height: 400px; overflow: scroll; background: rgba(11,11,11,0.9);}
                #popupDiv a{display:block;padding: 1px 5px;border-bottom:1px solid #777;color:white;}
                #popupDiv a:hover{background-color: #0c5460;}

             </style>
        #include("/footer.vm")
    </body>
</html>