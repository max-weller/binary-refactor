<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>$pageTitle</title>
    <meta name="author" content="Argan Wang">

    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->

    <!-- Le styles -->
    <link href="/static/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/static/css/screen.css" type="text/css" />
    <script type="text/javascript" src="/static/js/jquery.min.1.7.1.js"></script>
    <script type="text/javascript" src="/static/js/jquery.jeditable-1.7.2.js"></script>
    <script type="text/javascript" src="/static/js/jquery.treeview-1.4.1.js"></script>
    <script type="text/javascript" src="/static/js/bootstrap-tab.js"></script>
    <script type="text/javascript" src="/static/js/jquery-ui.min-1.8.9.js"></script>
    <script type="text/javascript" src="/static/js/jquery.floatinglayer.min.js"></script>
    
    <!-- Include required JS files -->
	<script type="text/javascript" src="/static/js/sh/shCore.js"></script>
	 
	<script type="text/javascript" src="/static/js/sh/shBrushJava.js"></script>
	 
	<!-- Include *at least* the core style and default theme -->
	<link href="/static/css/sh/shCore.css" rel="stylesheet" type="text/css" />
	<link href="/static/css/sh/shThemeDefault.css" rel="stylesheet" type="text/css" />

    <!-- Le fav and touch icons -->
    <link rel="shortcut icon" href="images/favicon.ico">
    <script>
      var jarId="$id";
      var jarVersion="0";
      function onLoadFiletree(res) {

          var pkgNodes = {};
          var pkgRootNode = null;
          function makePkgNode(package) {
            var idx = package.lastIndexOf("/");
            var parent, shortName;
            if (idx == -1) {
              parent = pkgRootNode;
              shortName = package;
            } else {
              var parentPkgName = package.substring(0, idx);
              parent = pkgNodes[parentPkgName];
              if (!parent) parent = makePkgNode(parentPkgName);
              shortName = package.substring(idx+1);
            }
            var $li = $("<li class=\"package closed\" data-pkgname=\""+package+"\"><span class=\"folder \">"+shortName+"</span>\n" +
                    "              <ul></ul></li>");
            $li.appendTo(parent);
            return pkgNodes[package] = $li.find("ul");
          }

          console.timeEnd("loadFileTree")
          console.time("onLoadFiletree-1")
          var method="cfrsource";
          var filter = $("#treeFilter").val();
          console.log("onLoadFiletree");
          console.log("class count:",res.classes.length);
          var ftc = $("#filetreeContainer");
          localStorage['jar_'+jarId+'_classes'] = JSON.stringify(res);
          ftc.html('<ul class="filetree"></ul>')
          pkgRootNode = ftc.find('ul');
          pkgRootNode.click(function(e) {
              var target = $(e.target);
              if (target.is("span.folder")) {
                  target.parent().toggleClass("closed");
              }
          });
          
          console.timeEnd("onLoadFiletree-1")
          console.time("onLoadFiletree-2")

          var filtered=0,shown=0;
          for(var i=0; i<res.classes.length; i++) {
              var cls = res.classes[i];
              if (cls.package.indexOf(filter) == -1) {filtered++;continue;}
              shown++;
              //console.log(i, cls);
              var hierarchyPackage = cls.package.replace(/([^/]+)\/([^/]+)\/([^/]+)/, "$1.$2.$3");
              if (!pkgNodes[hierarchyPackage]) {
                  makePkgNode(hierarchyPackage);
              }
              var clsName = cls.package+"/"+cls.shortName;
              pkgNodes[hierarchyPackage].append("<li class=\"file\" data-classname=\""+clsName+"\">" +
                        "<a href=\"/jarviewer/"+method+".htm?id="+res.jarId+"&clz="+clsName+"\" title=\""+cls.shortName+"\">" +
                        cls.shortName+"</a></li>")
          }
          //localStorage['jar_'+jarId+'_version'] = jarVersion;

          console.timeEnd("onLoadFiletree-2")

          if (thisClassName)
            $(".file[data-classname='"+thisClassName+"']").addClass("active").parents(".closed").removeClass("closed")

          ftc.append("<p>"+shown+" classes displayed, "+filtered+" hidden by filter</p>")
      }

      function loadFileTree() {
          console.log("loadFileTree started")
          console.time("loadFileTree")
          var ftc = $("#filetreeContainer");
          if (ftc.length>0) {
            if (localStorage['jar_'+jarId+'_classes']) {
              onLoadFiletree(JSON.parse(localStorage['jar_'+jarId+'_classes']));
            } else {
              $.get("/jarviewer/filetree.json?id="+jarId, onLoadFiletree, "json");
            }
          }
      }
      $(document).ready(function() {

          $("#treeFilter").on("change",function() {
              var filter = this.value;
              localStorage["jar_"+jarId+"_treeFilterValue"] = filter;
              loadFileTree();
          }).val(localStorage["jar_"+jarId+"_treeFilterValue"] ||"");

          loadFileTree();
      })
    </script>
  </head>